% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evalCriterion.R
\name{nparam}
\alias{nparam}
\title{Number of parameters in model}
\usage{
nparam(object, nparamsMethod = c("edf", "countLevels", "lme4"))
}
\arguments{
\item{object}{model fit by \code{lm()} or \code{lmer()}}

\item{nparamsMethod}{"edf": effective degrees of freedom. "countLevels" count number of levels in each random effect.  "lme4" number of variance compinents, as used by lme4.  See description in \code{\link{nparam}}}
}
\value{
number of parameters
}
\description{
In the case of \code{lm()}, the result is the number of coefficients  For a linear mixed model fit with \code{lmer()} there are 3 options.  "edf": effective degrees of freedom as computed by sum of diagonal values of the hat matrix return by \code{lmer()} . "countLevels", returns the number of fixed effects + number of levels in random effects + 1 for residual variance term.  This treats each level of a random effect as a parameter. "lme4", returns number of fixed effects + number of variance components.  Here a random effect with 10 levels is only counted as 1 parameter.  This tends to underpenalize.
}
\details{
Number of parameters in model from \code{lm()} or \code{lmer()}
}
